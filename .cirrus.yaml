unix_bundle_cache: &unix_bundle_cache
  bundle_cache:
    folder: vendor/bundle
    fingerprint_script:
      - echo $CIRRUS_OS
      - ruby -v
      - cat Gemfile
      - cat *.gemspec
  bundle_install_script:
    ## Fix Bundle cache in CI for macOS
    - bundle config set --local path 'vendor/bundle'
    - bundle update

env:
  ## To suppress flood of warnings:
  ## https://github.com/cirruslabs/cirrus-ci-docs/issues/814
  ## https://github.com/rubygems/rubygems/issues/4466#issuecomment-818688569
  ## Global for:
  ## 1. different tasks (rubocop, test, etc.);
  ## 2. avoiding overriding `env` in specific cases like macOS.
  TMPDIR: $CIRRUS_WORKING_DIR

remark_task:
  container:
    image: node

  node_modules_cache:
    folder: node_modules
    fingerprint_script:
      - echo $CIRRUS_OS
      - node -v
      - cat package.json
  install_script: npm install

  lint_script: npm run remark

  only_if: ($CIRRUS_BRANCH == 'master') ||
    changesInclude(
      '.cirrus.yaml', '.gitignore', 'package.json', '.remarkrc.yaml', '**.md'
    )

bundle-audit_task:
  container:
    image: ruby:latest

  os_prepare_script:
    - gem install bundler

  <<: *unix_bundle_cache

  audit_script: bundle exec bundle-audit check --update

  only_if: ($CIRRUS_BRANCH == 'master') ||
    changesInclude(
      '.cirrus.yaml', '.gitignore', 'Gemfile', '*.gemspec'
    )

rubocop_task:
  container:
    image: ruby:latest

  os_prepare_script:
    - gem install bundler

  <<: *unix_bundle_cache

  lint_script: bundle exec rubocop --format=json --out=rubocop.json

  always:
    rubocop_artifacts:
      path: rubocop.json
      type: text/json
      format: rubocop

  only_if: ($CIRRUS_BRANCH == 'master') ||
    changesInclude(
      '.cirrus.yaml', '.gitignore', 'Gemfile', '.toys.rb', '.rubocop.yml', '*.gemspec',
      '**.rb', '**.ru'
    )

task:
  name: Test on $CIRRUS_OS

  depends_on:
    - remark
    - bundle-audit
    - rubocop

  matrix:
    - container:
        matrix:
          image: ruby:2.6
          image: ruby:2.7
          image: ruby:3.0
          image: ruby:3.1
          image: jruby:latest

      os_prepare_script:
        ## For `ps`: https://cirrus-ci.com/task/4518391826612224
        - apt-get update && apt-get install -y procps
        - gem install bundler
        - bundle update

      <<: *unix_bundle_cache

    - container:
        image: ghcr.io/graalvm/truffleruby:latest
      os_prepare_script:
        ## For `ps`: https://cirrus-ci.com/task/4518391826612224
        ## For `gem install`: https://github.com/graalvm/container/issues/9
        - dnf install -y glibc-langpack-en procps
        - gem install bundler
      <<: *unix_bundle_cache

    - macos_instance:
        image: big-sur-base

      env:
        PATH: "/usr/local/opt/ruby/bin:$PATH"

      os_prepare_script:
        ## Brew is pre-installed, as described in the CI docs:
        ## https://cirrus-ci.org/guide/macOS/#list-of-available-images
        # - ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
        # - brew install ruby

        ## https://github.com/rubygems/rubygems/issues/2058#issuecomment-342347290
        - gem install bundler --force
        - bundle update

      <<: *unix_bundle_cache

    - windows_container:
        image: cirrusci/windowsservercore:2019
      env:
        ## It's better to pre-define here instead of `refreshenv`:
        ## https://cirrus-ci.org/guide/windows/#environment-variables
        RUBY_PATH: C:\tools\ruby
        MSYS2_PATH: C:\tools\msys2
        PATH: $MSYS2_PATH;$RUBY_PATH\bin;$PATH

      ruby_cache:
        folder: C:\tools
        fingerprint_script:
          - echo $CIRRUS_OS
          ## `--limit-output` to try rid off extra information and avoid cache miss:
          ## https://cirrus-ci.com/task/5913496480120832?logs=ruby#L11-L13
          - choco search --exact "ruby" --limit-output
        populate_script:
          ## Cirrus CI has Chocolatey pre-installed 😍:
          ## https://cirrus-ci.org/guide/windows/#chocolatey

          ## https://community.chocolatey.org/packages/ruby#notes
          - choco install msys2 -y --no-progress --params "/NoPath /InstallDir:%MSYS2_PATH%"

          ## Install the latest Ruby with Chocolatey: https://community.chocolatey.org/packages/ruby
          ## But I don't know what to do with cache and new versions (`upgrade`?)
          - choco install ruby -y --no-progress --params "/NoPath /InstallDir:%RUBY_PATH%"

          ## ```
          ## Installing json 2.6.2 with native extensions
          ## MSYS2 could not be found. Please run 'ridk install'
          ## or download and install MSYS2 manually from https://msys2.github.io/
          ## ```
          - ridk install 3

          - gem install bundler

      bundle_cache:
        folder: vendor\bundle
        fingerprint_script:
          - echo %CIRRUS_OS%
          - ruby -v
          - type Gemfile
          - type *.gemspec
      bundle_install_script:
        - bundle config set --local path 'vendor/bundle'
        - bundle update

  environment:
    CODECOV_TOKEN: ENCRYPTED[55a1cff933ded26988a336bdbd5d8b7a6a8dba54a6207d21edd8346ea1f4cae713654b54e9e64c5365fc8a8f5b2df3f7]

  test_script: bundle exec rspec --format=json --out=rspec.json

  always:
    rspec_artifacts:
      path: rspec.json
      type: text/json
      format: rspec

  only_if: ($CIRRUS_BRANCH == 'master') ||
    changesInclude(
      '.cirrus.yaml', '.gitignore', 'Gemfile', '.toys.rb', '.rspec',
      '*.gemspec', 'lib/**', 'exe/**', 'spec/**'
    )
